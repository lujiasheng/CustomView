apply plugin: 'com.android.application'
apply plugin: 'android-apt'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion var.compileSdkVersion
    buildToolsVersion var.buildToolsVersion

    defaultConfig {
        applicationId "com.ljs.customview"
        minSdkVersion var.minSdkVersion
        targetSdkVersion var.targetSdkVersion

        renderscriptTargetApi var.renderscriptTargetApi
        renderscriptSupportModeEnabled true

        // dex突破65535的限制
        multiDexEnabled true
        // 默认是umeng的渠道
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng"]
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    signingConfigs {
        debug {
        }
        release {

            keyAlias 'customview'
            keyPassword '123456'
            storeFile file('C:/Users/Administrator/Desktop/customview.jks')
            storePassword '123456'
        }
    }
    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"

            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"

            minifyEnabled true

            //Zipalign优化
            zipAlignEnabled true

            // 移除无用的resource文件
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为boohee_v1.0_2015-01-15_wandoujia.apk
                        def fileName = "boohee_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }
    // 友盟多渠道打包
    productFlavors {
        wandoujia {}
        _360 {}
        baidu {}
        xiaomi {}
        tencent {}

    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile("com.android.support:appcompat-v7:$var.supportLibraryVersion") {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    compile "com.android.support:design:$var.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$var.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$var.supportLibraryVersion"
    compile 'com.jakewharton:butterknife:8.4.0'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    apt 'com.jakewharton:butterknife-compiler:8.4.0'

}
task customClean(type: Exec) {
    ext.lockhunter = '\"D:\\ProgramFiles\\LockHunter\\LockHunter.exe\"'
    def buildDir = file(new File("build"))
    commandLine 'cmd', "$lockhunter", '/delete', '/silent', buildDir
}
clean.dependsOn customClean